#GEO DATA ANALYSIS USING PYTHON AND GOOGLE EARTH ENGINE
#First select the data set from google earth 
#Select and Area to be analyzed and then provide the training data

var s2_hyd_2023 = s2.filterDate("2023-01-01","2023-04-30").filterBounds(hyd).median();

var bands = ['B2', 'B3', 'B4', 'B8']
var s2_hyd_2023 = s2_hyd_2023.select(bands).addBands(s2_hyd_2023.normalizedDifference(['B8','B4']).rename('NDVI'));

var displayparameters = {
  min:1000,
  max:4500,
  bands: ['B8','B4','B3'],
};

Map.addLayer(s2_hyd_2023,displayparameters,"Image");

//load training data
var label = "Class";
var training = Water.merge(Forest).merge(Urban);

//extract features for training.
var trainingimage = s2_hyd_2023.sampleRegions({
  collection: training,
  properties: [label],
  scale:10 
});

//Duvide input samples into Training AND Testing.
var trainingData = trainingimage.randomColumn();
var trainSet = trainingData.filter(ee.Filter.lessThan('random',0.8));
var testSet = trainingData.filter(ee.Filter.greaterThanOrEquals('random',0.8));

//train a random forest calssifier

//define calssifier parameters:
var classifier = ee.Classifier.smileRandomForest({numberOfTrees: 100, variablesPerSplit: 2, minLeafPopulation: 1, bagFraction: 0.5, seed: 0});

//train the calssifier on the training dataset
var classifier = ee.Classifier.smileRandomForest(100).train(trainSet, label, bands);

//classify the image
//Use the trained calssifier to calssify the entire dataset 
var classified = s2_hyd_2023.classify(classifier);

//display the result
Map.centerObject(hyd,10);
Map.addLayer(classified, {min: 1, max: 3, palette: ['green', 'red', 'blue']}, 'Land Cover');

//get info about the trained calssifier
print('Results of trained classifier', classifier.explain());

//Get confustion matrix and overall accuracy
var trainAccuracy = classifier.confusionMatrix();
print('Training error matrix', trainAccuracy);
print('Training overall accuracy', trainAccuracy.accuracy());

testSet = testSet.classify(classifier);
var validationAccuracy = testSet.errorMatrix(label, 'classification');
print('Validation error matrix', validationAccuracy);
print('validation accuracy', validationAccuracy.accuracy());

Export.table.toDrive({
  collection: training,
  description: 'LCsamle2023',
  fileFormat: 'SHP',
})
